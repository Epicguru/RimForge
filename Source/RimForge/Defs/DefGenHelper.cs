using System;
using System.Collections.Generic;
using System.Reflection;
using Verse;

namespace RimForge
{
    public static class DefGenHelper
    {
        public static void TryPostGenerate(IEnumerable<Def> defs, bool registerToMod = true, bool registerToDB = true)
        {
            if (defs == null)
                return;

            // 3 steps: Resolve references, config errors, post load.
            // Not ideal but it helps solve some issues with mod compatibility.

            // Resolve references.
            foreach (var def in defs)
            {
                if (def == null)
                    continue;
                try
                {
                    def.ResolveReferences();
                }
                catch (Exception e)
                {
                    Core.Error($"Failed to resolve references for generated def {def.defName} '{def.LabelCap}'", e);
                }
            }

            foreach (var def in defs)
            {
                if (def == null)
                    continue;
                try
                {
                    var items = def.ConfigErrors();
                    if (items != null)
                    {
                        foreach (var error in items)
                        {
                            Core.Error($"Config error in generated def {def.defName} '{def.LabelCap}':");
                            Core.Error(error);
                        }
                    }
                }
                catch (Exception e)
                {
                    Core.Error($"Failed to get config errors for generated def {def.defName} '{def.LabelCap}'", e);
                }
            }

            foreach (var def in defs)
            {
                if (def == null)
                    continue;
                try
                {
                    def.PostLoad();
                }
                catch (Exception e)
                {
                    Core.Error($"Failed to post load generated def {def.defName} '{def.LabelCap}'", e);
                }
            }

            if (registerToMod)
            {
                foreach (var def in defs)
                {
                    if (def?.modContentPack != null)
                        def.modContentPack.AddDef(def, "Generated by RimForge");
                }
            }

            if (registerToDB)
            {
                object[] arg = new object[1];
                foreach (var def in defs)
                {
                    if (def == null)
                        continue;
                    try
                    {
                        var defType = def.GetType();
                        var method = typeof(DefDatabase<>).MakeGenericType(defType).GetMethod("Add", BindingFlags.Public | BindingFlags.Static, null, new Type[] { defType }, null);
                        arg[0] = def;
                        method.Invoke(null, arg);
                    }
                    catch (Exception e)
                    {
                        Core.Error($"Failed to register to database: generated def {def.defName} '{def.LabelCap}'", e);
                    }
                }
            }
        }
    }
}
